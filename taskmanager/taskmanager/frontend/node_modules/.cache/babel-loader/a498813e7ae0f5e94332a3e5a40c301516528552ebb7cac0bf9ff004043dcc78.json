{"ast":null,"code":"var _jsxFileName = \"D:\\\\taskmanager\\\\taskmanager\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [input, setInput] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/api/tasks\").then(res => res.json()).then(data => setTasks(data)).catch(err => console.error(\"Error fetching tasks:\", err));\n  }, []);\n  const handleAddTask = () => {\n    fetch(\"/api/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        task: input\n      })\n    }).then(res => res.json()).then(newTask => {\n      setTasks([...tasks, newTask]);\n      setInput(\"\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 40\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Enter a task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((t, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: t.task\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 30\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vcMQ3+uX9nNerb0QutXZH7wiilI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","input","setInput","fetch","then","res","json","data","catch","err","console","error","handleAddTask","method","headers","body","JSON","stringify","task","newTask","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","t","i","_c","$RefreshReg$"],"sources":["D:/taskmanager/taskmanager/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './style.css';\n\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"/api/tasks\")\n      .then(res => res.json())\n      .then(data => setTasks(data))\n      .catch(err => console.error(\"Error fetching tasks:\", err));\n  }, []);\n\n  const handleAddTask = () => {\n    fetch(\"/api/tasks\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ task: input })\n    })\n      .then(res => res.json())\n      .then(newTask => {\n        setTasks([...tasks, newTask]);\n        setInput(\"\");\n      });\n  };\n\n  return (\n    <div style={{ padding: 40 }}>\n      <h1>Task Manager</h1>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={e => setInput(e.target.value)}\n        placeholder=\"Enter a task\"\n      />\n      <button onClick={handleAddTask}>Add Task</button>\n      <ul>\n        {tasks.map((t, i) => <li key={i}>{t.task}</li>)}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,YAAY,CAAC,CAChBC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;EAC9D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1BT,KAAK,CAAC,YAAY,EAAE;MAClBU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEjB;MAAM,CAAC;IACtC,CAAC,CAAC,CACCG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACe,OAAO,IAAI;MACfnB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEoB,OAAO,CAAC,CAAC;MAC7BjB,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC;EACN,CAAC;EAED,oBACEN,OAAA;IAAKwB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC1B1B,OAAA;MAAA0B,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB9B,OAAA;MACE+B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE3B,KAAM;MACb4B,QAAQ,EAAEC,CAAC,IAAI5B,QAAQ,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACxCI,WAAW,EAAC;IAAc;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACF9B,OAAA;MAAQqC,OAAO,EAAErB,aAAc;MAAAU,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjD9B,OAAA;MAAA0B,QAAA,EACGvB,KAAK,CAACmC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAAKxC,OAAA;QAAA0B,QAAA,EAAaa,CAAC,CAACjB;MAAI,GAAVkB,CAAC;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAC5B,EAAA,CAvCQD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}